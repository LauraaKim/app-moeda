

import streamlit as st
import scipy.stats
import pandas as pd
import time

st.header('Jogando uma moeda')

# Passo 1 - Iniciar o estado se necessário
if 'df_experiment_results' not in st.session_state:
    st.session_state['df_experiment_results'] = pd.DataFrame(columns=['Número de tentativas', 'Média final'])

# Gráfico inicial
chart = st.line_chart([0.5])

# Função que faz o experimento
def toss_coin(n):
    trial_outcomes = scipy.stats.bernoulli.rvs(p=0.5, size=n)

    mean = None
    outcome_no = 0
    outcome_1_count = 0

    for r in trial_outcomes:
        outcome_no += 1
        if r == 1:
            outcome_1_count += 1
        mean = outcome_1_count / outcome_no
        chart.add_rows([mean])
        time.sleep(0.05)

    return mean

# Interface
number_of_trials = st.slider('Número de tentativas?', 1, 1000, 10)
start_button = st.button('Executar')

# Quando clicar no botão
if start_button:
    st.write(f'Executando o experimento de {number_of_trials} tentativas.')

    #  Executa o experimento
    mean = toss_coin(number_of_trials)

    #  Passo 2 - Salva o resultado no estado da sessão
    df = st.session_state['df_experiment_results']
    new_result = {'Número de tentativas': number_of_trials, 'Média final': mean}
    df = pd.concat([df, pd.DataFrame([new_result])], ignore_index=True)
    st.session_state['df_experiment_results'] = df

    #  Mostra os resultados
    st.write('Histórico dos experimentos realizados:')
    st.dataframe(st.session_state['df_experiment_results'])


